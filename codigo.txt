mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils
--------------------------------------------------------------
# Definir una función para dibujar conexiones
def drawHandLanmarks(image, hand_landmarks):

    # Dibujar las conexiones entre los puntos de referencia
----------------------------------------------------------------------
    if hand_landmarks:
      for landmarks in hand_landmarks:               
        mp_drawing.draw_landmarks(image, landmarks, mp_hands.HAND_CONNECTIONS)
------------------------------------------------------------------------------------------
    # Obtener la posición de los puntos de referencia del resultado procesado
    hand_landmarks = results.multi_hand_landmarks

    # Llamar la función para dibujar puntos de referencia
    drawHandLanmarks(image, hand_landmarks)
-------------------------------------------------------------------------------------------------
tipIds = [4, 8, 12, 16, 20]

# Definir una función para contar dedos
def countFingers(image, hand_landmarks, handNo=0):
-------------------------------------------------------------------------------------------------
    if hand_landmarks:
        # Obtener todos los puntos de referencia de la primera mano visible
        landmarks = hand_landmarks[handNo].landmark
        print(landmarks)
----------------------------------------------------------------------------------------
    # Obtener las posiciones de los dedos de la mano
    countFingers(image, hand_landmarks)
-------------------------------------------------------------------------------------------------
        # Contar dedos
        fingers = []

        for lm_index in tipIds:
                # Obtener puntas de los dedos y valor de posición "y" inferior
                finger_tip_y = landmarks[lm_index].y 
                finger_bottom_y = landmarks[lm_index - 2].y

                # Verificar si algún dedo está abierto o cerrado
                if lm_index !=4:
                    if finger_tip_y < finger_bottom_y:
                        fingers.append(1)
                        print("El dedo con id ",lm_index," está abierto.")

                    if finger_tip_y > finger_bottom_y:
                        fingers.append(0)
                        print("El dedo con id ",lm_index," está cerrado.")

        # print(fingers)
        totalFingers = fingers.count(1)

        # Mostrar texto
        text = f'Fingers: {totalFingers}'

        cv2.putText(image, text, (50,50), cv2.FONT_HERSHEY_SIMPLEX, 1, (255,0,0), 2)
-------------------------------------------------------------------------------------------------
                # Obtener punta del pulgar y valor de posición "y" 
                thumb_tip_x = landmarks[lm_index].x
                thumb_bottom_x = landmarks[lm_index - 2].x
--------------------------------------------------------------------------------------------------------------
                else:
                    if thumb_tip_x > thumb_bottom_x:
                        fingers.append(1)
                        print("El pulgar está abierto.")
                    if thumb_tip_x < thumb_bottom_x:
                        fingers.append(0)
                        print("El pulgar está cerrado.")

  



